apiVersion: apps/v1
kind: Deployment
metadata:
  name: appbackend-deployment
spec:
  selector:
    matchLabels:
      app: appbackend
  replicas: 1
  template:
    metadata:
      labels:
        app: appbackend
    spec:
      containers:
        - name: appbackend-container
          image: huitingfeng/appbackend:1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:   # Setting Enviornmental Variables
            - name: DB_HOST   # Setting Database host address from configMap
              value: mysql
              #valueFrom :
                #configMapKeyRef :
                  #name : db-config
                  #key :  host

            - name: DB_NAME  # Setting Database name from configMap
              value: fullstack
              #valueFrom :
                #configMapKeyRef :
                  #name : db-config
                  #key :  dbName

            - name: DB_USERNAME  # Setting Database username from Secret
              value: root
              #valueFrom :
                #secretKeyRef :
                  #name : mysql-secrets
                  #key :  username

            - name: DB_PASSWORD # Setting Database password from Secret
              value: Huiting123..
              #valueFrom :
                #secretKeyRef :
                  #name : mysql-secrets
                  #key :  password

---

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: appbackend-service
spec:
  selector:
    app: appbackend
  ports:
    - protocol: "TCP"
      port: 8080 # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
      #nodePort: 32404
  type: LoadBalancer # type of the service.

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: studentsystem-ingress
  #annotations:
    #nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: nginx
  rules:
    - host: studentsystem
      http:
        paths:
          - path: /student/ # /backend(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: appbackend-service
                port:
                  number: 8080
