apiVersion: apps/v1
kind: Deployment
metadata:
  name: appbackend-deployment
spec:
  selector:
    matchLabels:
      app: appbackend
  replicas: 1
  template:
    metadata:
      labels:
        app: appbackend
    spec:
      containers:
        - name: appbackend-container
          image: huitingfeng/appbackend:9.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: DB_HOST
              #value: mysql
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key:  DB_HOST

            - name: DB_NAME
              #value: fullstack
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key:  DB_NAME

            - name: DB_USERNAME
              #value: root
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key:  DB_USERNAME

            - name: DB_PASSWORD
              #value:
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key:  DB_PASSWORD


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: appfrontend-deployment
spec:
  selector:
    matchLabels:
      app: appfrontend
  replicas: 1
  template:
    metadata:
      labels:
        app: appfrontend
    spec:
      containers:
        - name: appfrontend-container
          image: huitingfeng/appfrontend:17.0
          imagePullPolicy: Always
          #envFrom:
            #- configMapRef:
                #name: app-config
          env:
            - name: REACT_APP_API_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key:  REACT_APP_API_BASE_URL
          ports:
            - containerPort: 80


---

apiVersion: v1
kind: Service
metadata:
  name: appbackend-service
spec:
  selector:
    app: appbackend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 31007
  #type: LoadBalancer
  #type: ClusterIP
  type: NodePort


---

apiVersion: v1
kind: Service
metadata:
  name: appfrontend-service
spec:
  selector:
    app: appfrontend
  ports:
    - protocol: TCP
      port: 80
      #nodePort: 30001
      targetPort: 80
  #type: LoadBalancer
  type: ClusterIP
  #type: NodePort



---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: studentsystem-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: studentsystem
      http:
        paths:
          - path: /student
            pathType: Prefix
            backend:
              service:
                name: appbackend-service
                port:
                  number: 8080
          - path: /
            pathType: Prefix
            backend:
              service:
                name: appfrontend-service
                port:
                  number: 80



