name: Deploy a website of student system

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  deploy-and-test:
    runs-on: ubuntu-latest
    name: deploy-and-test
    steps:
      - uses: actions/checkout@v3
      - name: Start Kubernetes minikube
        uses: medyagh/setup-minikube@master
      - name: Start Docker daemon
        run: eval $(minikube docker-env)
      - name: Build and Push Backend Docker Image
        run: |
          docker build --no-cache -t huitingfeng/appbackend:9.0 ./AppBackEnd
          echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker push huitingfeng/appbackend:9.0
      - name: Build and Push Frontend Docker Image
        run: |
          docker build --no-cache -t huitingfeng/appfrontend:17.0 ./AppFrontEnd
          docker push huitingfeng/appfrontend:17.0
      - name: Deploy to Minikube
        run: |
          kubectl apply -f db-configMap.yaml -f db-deployment.yaml -f app-configMap.yaml -f app-deployment.yaml
      - name: Wait for MySQL container initialization
        run: sleep 60
      - name: Check pods, deployments, services status
        run: kubectl get pods,deployments,svc
      #- name: Get MySQL Pod Name
      #  run: |
      #    MYSQL_POD=$(kubectl get pods -l app=mysql -o jsonpath="{.items[0].metadata.name}")
      #    echo "MYSQL_POD=$MYSQL_POD" >> $GITHUB_ENV
      #- name: Show MySQL Pod Details
      #  run: kubectl describe pod ${{ env.MYSQL_POD }}
      #- name: Check MySQL Pod Logs
      #  run: kubectl logs ${{ env.MYSQL_POD }}
      #- name: Attempt to Connect to MySQL
      #  run: kubectl exec ${{ env.MYSQL_POD }} -- mysql -h mysql -P 3306 -u root -pHuiting123.. -e "SHOW DATABASES;"
      #- name: Verify MySQL Connection
      #  run: |
      #    MYSQL_POD=$(kubectl get pods -l app=mysql -o jsonpath="{.items[0].metadata.name}")
      #    kubectl exec $MYSQL_POD -- mysqladmin -h mysql -P 3306 -u root -pHuiting123.. status
      - name: Get and Test Service URLs
        run: |
          minikube service list
          BACKEND_URL=$(minikube service appbackend-service --url)
          echo "Backend service URL: $BACKEND_URL"
          # Test the backend service using curl
          echo "Testing backend service at $BACKEND_URL"
          curl -sSf $BACKEND_URL -o /dev/null || echo "Curl request to backend service failed"
      - name: Test Kubernetes service URL
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 10
          max_attempts: 4
          command: curl $(minikube service appbackend-service --url)/student/getAll
